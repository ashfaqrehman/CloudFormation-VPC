{
    "Description": "My Cloud Academy Labs 2-Tier Scalable API Template",
    "Parameters": {
        "VPCAZ": {
            "Type": "AWS::EC2::AvailabilityZone::Name",
            "Description": "The Availability Zone to use for the simple VPC.",
            "AllowedPattern" : "^(?!us-west-2d).*$",
            "ConstraintDescription": "Availability zone must not be us-west-2d."
        }
    },
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "10.0.0.0/16"
            }
        },
        "PublicSubnet": {
            "DependsOn": [
                "VPC"
            ],
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": { "Ref": "VPCAZ" },
                "CidrBlock": "10.0.0.0/24",
                "MapPublicIpOnLaunch" : true,
                "VpcId": { "Ref": "VPC" }
            }
        },
        "PrivateSubnet": {
            "DependsOn": [
                "VPC"
            ],
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": { "Ref": "VPCAZ" },
                "CidrBlock": "10.0.1.0/24",
                "VpcId": { "Ref": "VPC" }
            }
        },

        "GatewayToInternet": {
            "Type": "AWS::EC2::InternetGateway"
        },
        "NATInstance": {
            "DependsOn": [
                "GatewayAttachmentToVPC",
                "InstancesToNATSecurityGroup",
                "PublicSubnet"
            ],
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "AvailabilityZone": { "Ref": "VPCAZ" },
                "ImageId": "??????",
                "InstanceType": "m3.medium",
                "SecurityGroupIds": [
                    { "Ref": "InstancesToNATSecurityGroup" }
                ],
                "SourceDestCheck": false,
                "SubnetId": { "Ref": "PublicSubnet" }
            }
        },
        "RoutesForPublicSubnet": {
            "DependsOn": [
                "VPC"
            ],
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": { "Ref": "VPC" }
            }
        },
        "RoutesForPrivateSubnet": {
            "DependsOn": [
                "VPC"
            ],
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": { "Ref": "VPC" }
            }
        },
        "GenericNACL": {
            "DependsOn": [
                "VPC"
            ],
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": { "Ref": "VPC" }
            }
        },

        "GatewayAttachmentToVPC": {
            "DependsOn": [
                "GatewayToInternet",
                "VPC"
            ],
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "InternetGatewayId": { "Ref": "GatewayToInternet" },
                "VpcId": { "Ref": "VPC" }
            }
        },
        "RouteToGateway": {
            "DependsOn": [
                "GatewayToInternet",
                "GatewayAttachmentToVPC",
                "RoutesForPublicSubnet"
            ],
            "Type": "AWS::EC2::Route",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": { "Ref": "GatewayToInternet" },
                "RouteTableId": { "Ref": "RoutesForPublicSubnet" }
            }
        },
        "RouteToNat": {
            "DependsOn": [
                "NATInstance",
                "RoutesForPrivateSubnet"
            ],
            "Type": "AWS::EC2::Route",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "InstanceId": { "Ref": "NATInstance" },
                "RouteTableId": { "Ref": "RoutesForPrivateSubnet" }
            }
        },
        "NACLInboundEntry": {
            "DependsOn": [
                "GenericNACL"
            ],
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "CidrBlock": "0.0.0.0/0",
                "Egress": false,
                "NetworkAclId": { "Ref": "GenericNACL" },
                "PortRange": {
                    "From": "0",
                    "To": "65535"
                },
                "Protocol": "6",
                "RuleAction": "allow",
                "RuleNumber": 100
            }
        },
        "NACLOutboundEntry": {
            "DependsOn": [
                "GenericNACL"
            ],
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "CidrBlock": "0.0.0.0/0",
                "Egress": true,
                "NetworkAclId": { "Ref": "GenericNACL" },
                "PortRange": {
                    "From": "0",
                    "To": "65535"
                },
                "Protocol": "6",
                "RuleAction": "allow",
                "RuleNumber": 100
            }
        },
        "NACLBindingForPublicSubnet": {
            "DependsOn": [
                "PublicSubnet",
                "GenericNACL"
            ],
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": { "Ref": "PublicSubnet" },
                "NetworkAclId": { "Ref": "GenericNACL" }
            }
        },
        "NACLBindingForPrivateSubnet": {
            "DependsOn": [
                "PrivateSubnet",
                "GenericNACL"
            ],
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": { "Ref": "PrivateSubnet" },
                "NetworkAclId": { "Ref": "GenericNACL" }
            }
        },
        "RoutesBindingForPublicSubnet": {
            "DependsOn": [
                "RoutesForPublicSubnet",
                "PublicSubnet"
            ],
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": { "Ref": "RoutesForPublicSubnet" },
                "SubnetId": { "Ref": "PublicSubnet" }
            }
        },
        "RoutesBindingForPrivateSubnet": {
            "DependsOn": [
                "RoutesForPrivateSubnet",
                "PrivateSubnet"
            ],
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": { "Ref": "RoutesForPrivateSubnet" },
                "SubnetId": { "Ref": "PrivateSubnet" }
            }
        },


        "LoadBalancer": {},
        "InstancesGroup": {},
        "InstancesConfig": {},
        "DynamoTableForTodos": {},

        "DynamoAccessRole": {},
        "DynamoAccessInstanceProfile": {},

        "LBToInstancesSecurityGroup": {},
        "InternetToLBSecurityGroup": {},
        "InstancesToNATSecurityGroup": {}
    }
}
